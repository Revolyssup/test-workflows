name: Meshery Istio Pattern Components Generator
on:
  push:
    branches:
      - 'main'

jobs:
  check_istio_version:
    name: Check Istio Version
    runs-on: ubuntu-latest
    outputs:
      NEW_ISTIO_VERSION: ${{ steps.glrt.outputs.release }}
      EXISTS: ${{ env.EXISTS }}
    steps:
      - name: Get latest release tag
        id: glrt
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: istio/istio
          excludes: prerelease, draft

      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Check if manifests for latest release exist
        run: |
          if [ -d templates/oam/workloads/${{ steps.glrt.outputs.release }} ]
          then
            echo "EXISTS=true" > $GITHUB_ENV
          else
            export "EXISTS=false" > $GITHUB_ENV
          fi
          echo "exists: $EXISTS"
  generator:
    name: Generate and push OAM definitions
    needs: [ check_istio_version ]
    if: ${{ !needs.check_istio_version.outputs.EXISTS }}
    env:
      NEW_ISTIO_VERSION: ${{ needs.check_istio_version.outputs.NEW_ISTIO_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
          token: ${{ secrets.TOKEN }}

      - name: Get Istio manifests
        run: |
          curl https://raw.githubusercontent.com/istio/istio/$NEW_ISTIO_VERSION/manifests/charts/base/crds/crd-all.gen.yaml > ~/istio.yml

      - name: Build jsonschema util
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          nvm install v14.15.3
          nvm install-latest-npm
          git clone https://github.com/layer5io/kubeopenapi-jsonschema util
          cd util
          npm i; npm i nexe -g
          make linux

      - name: Generate Workload definitions
        run: |
          dirPath=../templates/oam/workloads/$NEW_ISTIO_VERSION
          cd util
          mkdir -p $dirPath

          meshName=Istio
          smpMeshName=ISTIO

          template='{"apiVersion":"core.oam.dev/v1alpha1","kind":"WorkloadDefinition","metadata":{},"spec":{"definitionRef":{},"metadata":{"@type":"pattern.meshery.io/mesh/workload","meshVersion":"'$NEW_ISTIO_VERSION'","meshName":"'$smpMeshName'","k8sAPIVersion":null,"k8sKind":""}}}'

          crds=$(./kubeopenapi-jsonschema --location ~/istio.yml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition")]' -o json --o-filter '$..["spec"]["names"]["kind"]' | jq '.[]')
          touch supported_versions.md
          echo "Creating md in $pwd "
          echo "## Supported Workloads for Istio $NEW_ISTIO_VERSION are- " > supported_versions.md
          for t in ${crds[@]}; do
            echo "* $t" >> supported_versions.md
            nameUpper=`echo $t  | tr -d '"'`
            nameLower=`echo $t  | tr -d '"' | tr '[:upper:]' '[:lower:]'`
            definitionRef=$(printf %s.istio.meshery.layer5.io $nameLower)

            apiVersion=$(./kubeopenapi-jsonschema --location ~/istio.yml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition" && @.spec.names.kind=='$t')]..spec.versions[0]' --o-filter "$[].name" -o json | jq '.[]' | tr -d '"')

            apiGroup=$(./kubeopenapi-jsonschema --location ~/istio.yml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition" && @.spec.names.kind=='$t')]..spec' --o-filter "$[].group" -o json | jq '.[]' | tr -d '"')

            ./kubeopenapi-jsonschema --location ~/istio.yml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition" && @.spec.names.kind=='$t')]..openAPIV3Schema.properties.spec' --o-filter "$[]" -o json |\
            jq '.[] | ."title" = "'$nameLower'"' > $dirPath/$nameLower.istio.meshery.layer5io.schema.json

            echo $template |\
            jq '
            ."metadata"."name" = "'$(printf %s.Istio $nameUpper)'"
            | ."spec"."metadata"."k8sAPIVersion" = "'$(printf $apiGroup/$apiVersion $apiGroup $apiVersion)'"
            | ."spec"."metadata"."k8sKind" = "'$nameUpper'"
            | ."spec"."definitionRef"."name"="'$definitionRef'"' > $dirPath/$nameLower.istio_definition.json
          done

          cat supported_versions.md
      - name: Uploading markdown 
        uses: actions/upload-artifact@v2
        with:
          name: supported_versions.md
          path: util/supported_versions.md

      - name: Cleanup
        run: |
          rm -rf util

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: templates/
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: '--signoff'
          commit_message: "[Patterns] Pattern components generated from latest Istio manifests"


  Push-to-meshery-docs:
    name: Push supported components to meshery docs
    needs: [check_istio_version,generator]
    runs-on: ubuntu-latest
    env:
      NEW_ISTIO_VERSION: ${{ needs.check_istio_version.outputs.NEW_ISTIO_VERSION }}
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          repository: Revolyssup/test-workflows2
          token: ${{ secrets.TOKEN }}
      - name: Delete already existing file
        run: |
          echo "new istio version $NEW_ISTIO_VERSION"
          path=./Istio/"$NEW_ISTIO_VERSION" #Path to specific directory in docs 
          rm -rf "$path"  
      - name: Create new directory
        run: |
          mkdir -p "$path"  
          cd "$path"
          echo "PATH is $path"
      - name: Download file
        uses: actions/download-artifact@v2
        with:
          name: supported_versions.md
          path: "$path"
      - name: Commit supported crds to meshery docs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # file_pattern: docs
          # commit_user_name: l5io
          # commit_user_email: ci@layer5.io
          # commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          # commit_options: '--signoff'
          commit_message: "[Patterns] Pattern components generated from latest Istio manifests"

  