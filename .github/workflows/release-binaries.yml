name: Verify Backported Files
on:
  pull_request:
    types: [labeled, synchronize, opened]
    paths:
      - '**'

jobs:
  verify-backported-files:
    if: contains(github.event.pull_request.labels.*.name, 'check-backport')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout enterprise repo (PR HEAD)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Checkout apache/apisix repo
        uses: actions/checkout@v4
        with:
          repository: apache/apisix
          ref: release/3.2
          path: apisix-source

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Verify files against source
        id: verify-files
        run: |
          # Create a temporary file for the verification results
          TEMP_FILE=$(mktemp)
          echo "## Verification Results" > $TEMP_FILE
          echo "" >> $TEMP_FILE

          ALL_FILES_VALID=true
          ANY_FILE_CHECKED=false

          # Loop through all added/modified files
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # Check if file exists in source repo
            if [ -f "apisix-source/$file" ]; then
              ANY_FILE_CHECKED=true
              # Compare files and capture diff output
              DIFF_OUTPUT=$(diff -u "apisix-source/$file" "$file" 2>&1 || true)
              
              if [ -n "$DIFF_OUTPUT" ]; then
                echo "" >> $TEMP_FILE
                echo "❌ Differences found in $file" >> $TEMP_FILE
                echo '```diff' >> $TEMP_FILE
                echo "$DIFF_OUTPUT" >> $TEMP_FILE
                echo '```' >> $TEMP_FILE
                echo "" >> $TEMP_FILE
                ALL_FILES_VALID=false
              else
                echo "✅ $file matches source" >> $TEMP_FILE
                echo "" >> $TEMP_FILE
              fi
            else
              echo "⚠️ $file not found in source repository" >> $TEMP_FILE
              echo "" >> $TEMP_FILE
            fi
          done

          if [ "$ANY_FILE_CHECKED" = false ]; then
            echo "No files to verify against source repository" >> $TEMP_FILE
            ALL_FILES_VALID=false
          elif [ "$ALL_FILES_VALID" = true ]; then
            echo "✔️ All copied files match source" >> $TEMP_FILE
          fi

          # Escape special characters and output the results
          ESCAPED_RESULTS=$(cat $TEMP_FILE | jq -Rs .)
          echo "results=$ESCAPED_RESULTS" >> $GITHUB_OUTPUT

      - name: Install jq (for JSON escaping)
        if: always()
        run: sudo apt-get install -y jq

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('## Verification Results')
            );
            
            // Get and parse the escaped results
            const results = JSON.parse(`${{ steps.verify-files.outputs.results }}`);
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: results
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: results
              });
            }
